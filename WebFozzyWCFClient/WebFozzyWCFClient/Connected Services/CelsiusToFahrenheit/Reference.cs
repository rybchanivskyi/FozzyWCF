//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFozzyWCFClient.CelsiusToFahrenheit {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CelsiusToFahrenheit.ICelsiusToFahrenheit")]
    public interface ICelsiusToFahrenheit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICelsiusToFahrenheit/ConvertToFahrenheit", ReplyAction="http://tempuri.org/ICelsiusToFahrenheit/ConvertToFahrenheitResponse")]
        double ConvertToFahrenheit(double celsius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICelsiusToFahrenheit/ConvertToFahrenheit", ReplyAction="http://tempuri.org/ICelsiusToFahrenheit/ConvertToFahrenheitResponse")]
        System.Threading.Tasks.Task<double> ConvertToFahrenheitAsync(double celsius);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICelsiusToFahrenheitChannel : WebFozzyWCFClient.CelsiusToFahrenheit.ICelsiusToFahrenheit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CelsiusToFahrenheitClient : System.ServiceModel.ClientBase<WebFozzyWCFClient.CelsiusToFahrenheit.ICelsiusToFahrenheit>, WebFozzyWCFClient.CelsiusToFahrenheit.ICelsiusToFahrenheit {
        
        public CelsiusToFahrenheitClient() {
        }
        
        public CelsiusToFahrenheitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CelsiusToFahrenheitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CelsiusToFahrenheitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CelsiusToFahrenheitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ConvertToFahrenheit(double celsius) {
            return base.Channel.ConvertToFahrenheit(celsius);
        }
        
        public System.Threading.Tasks.Task<double> ConvertToFahrenheitAsync(double celsius) {
            return base.Channel.ConvertToFahrenheitAsync(celsius);
        }
    }
}
